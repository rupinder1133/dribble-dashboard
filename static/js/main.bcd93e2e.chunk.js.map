{"version":3,"sources":["components/header/header.module.scss","components/accordion/accordion.module.scss","components/dropdown/dropdown.module.scss","components/widget/widget.module.scss","components/profile/profile.module.scss","components/navbar/navBar.module.scss","pages/dashboard/dashboard.module.scss","components/smallAreaChart/smallAreaChartWidget.module.scss","serviceWorker.js","components/widget/Widget.js","components/button/Button.js","components/dropdown/Dropdown.js","components/dailyVisitorsChart/DailyVisitorsChart.js","components/loader/Loader.js","components/swing/Swing.js","components/smallAreaChart/SmallAreaChartWidget.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/accordion/Accordion.js","components/recentlyViewed/RecentlyViewed.js","components/navbar/NavBar.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js","components/dailyVisitorsChart/dailyVisitorsChart.module.scss","components/recentlyViewed/recentlyViewed.module.scss","components/swing/swing.module.scss","components/button/button.module.scss","components/loader/loader.module.scss","app.module.scss","components/userStatus/userStatus.module.scss"],"names":["module","exports","flagIcon","container","controlIcons","headerIcon","headerLabel","options","isOpen","isContentVisible","option","header","select","optionCommonStyle","placeholder","placeholderLabel","fullWidth","profileElements","profile","image","name","status","description","settings","settingsOnFocus","home","secondaryOption","scrollable","filterOptions","filter","months","chartContainer","smallWidgets","item","title","value","Boolean","window","location","hostname","match","Widget","_ref","children","className","react_default","a","createElement","classNames","styles","Button","state","inFocus","onFocus","_this","setState","onBlur","_classNames","_this$props","this","props","onClick","onFocusClassName","button","Object","defineProperty","btnFocus","onMouseUp","onMouseDown","Component","closedIcon","index_es","icon","faCaretUp","faCaretDown","openIcon","Dropdown","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","document","addEventListener","handleOutsideClick","handleEsc","removeEventListener","e","key","selectOption","index","selectedOptionIndex","mayBeSelectedOptionIndex","findIndex","o","selectedValue","expandOptionsToFullWidth","maxOptions","optionHeight","optionsRef","clientHeight","maxOptionWidth","Array","from","map","clientWidth","reduce","max","style","maxHeight","concat","containerRef","minWidth","_this2","_this$props2","placeHolder","_this$state","effectivePlaceholder","label","ref","button_Button","defaultProps","tickFormatter","RenderTooltip","active","payload","month","year","tooltipContainer","date","visitsContainer","legend","RenderCursor","es6","x","width","y","height","fill","DailyVisitorsChart","_ref2","data","ticks","domain","barSize","stroke","vertical","dataKey","axisLine","tickLine","tick","fontSize","tickMargin","orientation","tickSize","dy","content","DailyVisitorsChart_RenderTooltip","cursor","DailyVisitorsChart_RenderCursor","Loader","isLoading","ldsRing","Swing","swing","sign","isPositive","faExternalLinkSquareAlt","SmallAreaChartWidget","toConsumableArray","Math","round","random","widget_Widget","swing_Swing","years","Dashboard","selectedMonth","selectedYear","isDailyVisitChartLoading","dailyVisitData","genDailyVisitData","markLoaded","updateFilters","updatedState","timeout","setTimeout","dropdown_Dropdown","loader_Loader","dailyVisitorsChart_DailyVisitorsChart","smallAreaChart_SmallAreaChartWidget","Intl","NumberFormat","format","UserStatus","online","Profile","faCog","userStatus_UserStatus","Accordion","toggleContentVisibility","_classNames2","onTransitionEnd","RecentlyViewed","faLongArrowAltRight","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","faHome","profile_Profile","accordion_Accordion","recentlyViewed_RecentlyViewed","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","App","appContainer","navbar_NavBar","mainContent","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","lds-ring"],"mappings":"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","file":"static/js/main.bcd93e2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"isContentVisible\":\"accordion_isContentVisible__3mmRQ\",\"option\":\"accordion_option__2uaXo\",\"header\":\"accordion_header__KSBK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"dropdown_select__2Z59b\",\"optionCommonStyle\":\"dropdown_optionCommonStyle__3fumI\",\"placeholder\":\"dropdown_placeholder__jle5-\",\"option\":\"dropdown_option__3SZgp\",\"placeholderLabel\":\"dropdown_placeholderLabel__3TXeS\",\"options\":\"dropdown_options__lYzgy\",\"isOpen\":\"dropdown_isOpen__2vVkH\",\"controlIcons\":\"dropdown_controlIcons__z1VsC\",\"fullWidth\":\"dropdown_fullWidth__OGBS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"widget_container__1ThYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\",\"settingsOnFocus\":\"profile_settingsOnFocus__3M4G_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\",\"scrollable\":\"navBar_scrollable__tz26l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dashboard_header__2gN8S\",\"filterOptions\":\"dashboard_filterOptions__uxzD5\",\"filter\":\"dashboard_filter__18gax\",\"months\":\"dashboard_months__3y13N\",\"chartContainer\":\"dashboard_chartContainer__27p65\",\"smallWidgets\":\"dashboard_smallWidgets__2xCFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"smallAreaChartWidget_container__1McQ5\",\"item\":\"smallAreaChartWidget_item__21g4G\",\"title\":\"smallAreaChartWidget_title__2duXK\",\"value\":\"smallAreaChartWidget_value__1FQdd\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './widget.module.scss';\n\nconst Widget = ({\n                  children,\n                  className,\n                }) => (\n    <div className={classNames(styles.container, className)}>\n      {children}\n    </div>\n);\nWidget.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Widget;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nclass Button extends Component {\n  state = {\n    inFocus: false,\n  };\n\n  onFocus = () => {\n    this.setState({inFocus: true});\n  };\n\n  onBlur = () => {\n    return this.setState({inFocus: false});\n  };\n\n  render() {\n    const {children, className, onClick, onFocusClassName} = this.props;\n    const {inFocus} = this.state;\n\n    return (\n        <button\n            className={classNames(\n                styles.button,\n                className,\n                {\n                  [styles.btnFocus]: inFocus,\n                  [onFocusClassName]: inFocus,\n                },\n            )}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onMouseUp={this.onBlur}\n            onMouseDown={this.onFocus}\n            onClick={onClick}\n        >\n          {children}\n        </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onFocusClassName: PropTypes.string,\n};\n\nexport default Button;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nimport Button from \"../button/Button\";\nimport styles from './dropdown.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const mayBeSelectedOptionIndex = props.options.findIndex(o => o.value === props.selectedValue);\n    const selectedOptionIndex = mayBeSelectedOptionIndex === -1 ? 0 : mayBeSelectedOptionIndex;\n\n    this.state = {\n      isOpen: true,\n      selectedOptionIndex,\n      expandOptionsToFullWidth: false,\n    };\n  }\n\n  componentDidMount() {\n    const {maxOptions} = this.props;\n\n    const optionHeight = this.optionsRef.children[0].clientHeight;\n    const maxOptionWidth = Array.from(this.optionsRef.children)\n        .map(o => o.clientWidth)\n\n        .reduce((max, value) => max > value ? max : value, 0);\n\n    this.optionsRef.style.maxHeight = `${(maxOptions * optionHeight) + optionHeight / 2}px`;\n    this.containerRef.style.minWidth = `${maxOptionWidth + 30}px`;\n    this.setState({isOpen: false, expandOptionsToFullWidth: true});\n  }\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen}, () => {\n      if (this.state.isOpen) {\n        document.addEventListener('click', this.handleOutsideClick);\n        document.addEventListener('keydown', this.handleEsc);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('keydown', this.handleEsc);\n      }\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    this.toggleOpen(e);\n  };\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.toggleOpen(e)\n    }\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    if (this.state.selectedOptionIndex !== index) {\n      this.setState({selectedOptionIndex: index}, this.toggleOpen);\n      onClick && onClick(options[index].value, index);\n    }\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n      expandOptionsToFullWidth,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div\n            className={classNames(styles.select, className)}\n            ref={ref => {\n              this.containerRef = ref;\n            }}\n        >\n          <Button\n              className={classNames(styles.placeholder, {[styles.fullWidth]: expandOptionsToFullWidth})}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            {isOpen ? openIcon : closedIcon}\n          </Button>\n          <div\n              className={classNames(styles.options, {[styles.isOpen]: isOpen})}\n              ref={ref => {\n                this.optionsRef = ref;\n              }}\n          >\n            {options.map((option, index) =>\n                <Button\n                    key={option.value}\n                    className={classNames(styles.option, {[styles.fullWidth]: expandOptionsToFullWidth})}\n                    onClick={(e) => this.selectOption(e, index)}\n                >\n                  {option.label}\n                </Button>\n            )}\n          </div>\n        </div>\n    )\n  }\n}\n\nDropdown.defaultProps = {\n  maxOptions: 5,\n};\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n  selectedValue: PropTypes.string,\n  className: PropTypes.string,\n  maxOptions: PropTypes.number.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport {Bar, BarChart, CartesianGrid, Rectangle, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\nimport PropTypes from 'prop-types';\nimport styles from './dailyVisitorsChart.module.scss';\n\nconst gridColor = \"#e2e5ee\";\nconst barColor = \"#1d68d5\";\nconst tickColor = '#93949a';\n\nconst tickFormatter = (value) => value ? `${value / 1000}K` : '';\n\nconst RenderTooltip = ({active, payload, label, month, year}) => (\n    <If condition={active}>\n      <div className={styles.tooltipContainer}>\n        <div className={styles.date}>{label} {month} {year}</div>\n        <div className={styles.visitsContainer}>\n          <div className={styles.legend}/>\n          <div className={styles.label}>Visitors</div>\n          <div><strong>{payload[0].value}</strong></div>\n        </div>\n      </div>\n    </If>\n);\n\nconst RenderCursor = (props) => (\n    <Rectangle\n        x={props.x + (props.width / 2) - 2}\n        y={props.y}\n        width={2}\n        height={props.height}\n        fill={gridColor}\n    />\n);\n\nconst DailyVisitorsChart = ({data, month, year, height, ticks, domain, barSize}) =>\n    <ResponsiveContainer width=\"100%\" height={height} className=\"dailyVisitorsChart\">\n      <BarChart data={data} barSize={barSize}>\n        <CartesianGrid\n            stroke={gridColor}\n            vertical={false}\n        />\n        <XAxis\n            dataKey=\"x\"\n            axisLine={false}\n            tickLine={false}\n            tick={{fill: tickColor, fontSize: 10}}\n            tickMargin={5}\n        />\n        <YAxis\n            ticks={ticks}\n            tickFormatter={tickFormatter}\n            orientation=\"right\"\n            axisLine={false}\n            tickLine={{stroke: gridColor}}\n            tickSize={18}\n            width={25}\n            tick={{fill: tickColor, fontSize: 10, dy: 15}}\n            tickMargin={-16}\n            domain={domain}\n        />\n        <Tooltip content={<RenderTooltip month={month} year={year}/>} cursor={<RenderCursor/>}/>\n        <Bar dataKey=\"y\" fill={barColor}/>\n      </BarChart>\n    </ResponsiveContainer>;\n\n\nDailyVisitorsChart.defaultProps = {\n  barSize: 12,\n};\nDailyVisitorsChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  })),\n  month: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  barSize: PropTypes.number.isRequired,\n  ticks: PropTypes.arrayOf(PropTypes.number),\n  domain: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default DailyVisitorsChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './loader.module.scss'\n\nconst Loader = ({children, isLoading}) => (\n    <Choose>\n      <When condition={isLoading}>\n        <div className={styles.container}>\n          <div className={styles.ldsRing}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n          </div>\n        </div>\n      </When>\n      <Otherwise>\n        {children}\n      </Otherwise>\n    </Choose>\n);\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {faExternalLinkSquareAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nimport styles from './swing.module.scss';\n\nconst Swing = ({\n                 swing,\n               }) => {\n  const sign = swing > 0 ? '+' : '';\n\n  return (\n      <span className={classNames(styles.swing, { [styles.isPositive]: swing > 0 })}>\n          {sign}\n          {swing}\n          <FontAwesomeIcon className={styles.icon} icon={faExternalLinkSquareAlt} />\n      </span>\n  );\n};\nSwing.propTypes = {\n  swing: PropTypes.number.isRequired,\n};\n\nexport default Swing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {Area, AreaChart} from \"recharts\";\nimport Widget from \"../widget/Widget\";\nimport Swing from \"../swing/Swing\";\n\nimport styles from './smallAreaChartWidget.module.scss'\n\nconst SmallAreaChartWidget = ({\n                                title,\n                                value,\n                                swing,\n                                stroke,\n                                fill,\n                              }) => {\n  const data = [...Array(10)].map((e, index) => ({\n    x: index + 1,\n    y: Math.round(Math.random() * (100 - 50) + 50),\n  }));\n\n  return (\n      <Widget className={styles.container}>\n        <div className={classNames(styles.item, styles.title)}>{title}</div>\n        <div className={classNames(styles.item, styles.value)}><strong>{value}</strong></div>\n        <div className={classNames(styles.item)}><Swing swing={swing} /></div>\n        <AreaChart\n            width={150}\n            height={40}\n            data={data}\n            className={styles.item}\n        >\n          <Area dataKey=\"y\" stroke={stroke} fill={fill}/>\n        </AreaChart>\n      </Widget>\n  );\n};\n\nSmallAreaChartWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  swing: PropTypes.number.isRequired,\n  fill: PropTypes.string.isRequired,\n  stroke: PropTypes.string.isRequired,\n};\n\nexport default SmallAreaChartWidget;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport Widget from \"../../components/widget/Widget\";\nimport styles from './dashboard.module.scss';\nimport Dropdown from \"../../components/dropdown/Dropdown\";\nimport DailyVisitorsChart from \"../../components/dailyVisitorsChart/DailyVisitorsChart\";\nimport Loader from \"../../components/loader/Loader\";\nimport SmallAreaChartWidget from \"../../components/smallAreaChart/SmallAreaChartWidget\";\n\nconst months = [\n  {value: 'jan', label: 'January'},\n  {value: 'feb', label: 'February'},\n  {value: 'mar', label: 'March'},\n  {value: 'apr', label: 'April'},\n  {value: 'may', label: 'May'},\n  {value: 'jun', label: 'June'},\n  {value: 'jul', label: 'July'},\n  {value: 'aug', label: 'August'},\n  {value: 'sep', label: 'September'},\n  {value: 'oct', label: 'October'},\n  {value: 'nov', label: 'November'},\n  {value: 'dec', label: 'December'},\n];\n\nconst years = [\n  {value: '15', label: '2015'},\n  {value: '16', label: '2016'},\n  {value: '18', label: '2018'},\n  {value: '19', label: '2019'},\n];\n\nclass Dashboard extends Component {\n  state = {\n    selectedMonth: 11,\n    selectedYear: 2,\n    isDailyVisitChartLoading: true,\n    dailyVisitData: [],\n  };\n\n  componentDidMount() {\n    this.genDailyVisitData();\n  }\n\n  genDailyVisitData = () => {\n    this.setState({\n      dailyVisitData: [...Array(31)].map((e, index) => ({\n        x: index + 1,\n        y: Math.round(Math.random() * (8500 - 1500) + 1500),\n      }))\n    }, this.markLoaded)\n  };\n\n  updateFilters = (updatedState) => {\n    this.setState(updatedState, this.genDailyVisitData)\n  };\n\n  markLoaded = () => {\n    const timeout = Math.round(Math.random() * 2000);\n    setTimeout(() => this.setState({\n      isDailyVisitChartLoading: false,\n    }), timeout)\n  };\n\n  render() {\n    const {selectedMonth, selectedYear, isDailyVisitChartLoading, dailyVisitData} = this.state;\n\n    return (\n        <div>\n          <Widget>\n            <div className={styles.header}>\n              <strong>Daily Visitors</strong>\n              <div className={styles.filterOptions}>\n                <Dropdown\n                    options={months}\n                    selectedValue={months[selectedMonth].value}\n                    className={classNames(styles.filter, styles.months)}\n                    onClick={(value, index) => this.updateFilters({selectedMonth: index, isDailyVisitChartLoading: true})}\n                />\n                <Dropdown\n                    options={years}\n                    selectedValue={years[2].value}\n                    className={classNames(styles.filter)}\n                    onClick={(value, index) => this.updateFilters({selectedYear: index, isDailyVisitChartLoading: true})}\n                />\n              </div>\n            </div>\n            <div className={styles.chartContainer}>\n              <Loader isLoading={isDailyVisitChartLoading}>\n                <DailyVisitorsChart\n                    data={dailyVisitData}\n                    month={months[selectedMonth].label}\n                    year={years[selectedYear].label}\n                    height={200}\n                    ticks={[0, 3000, 6000, 9000]}\n                    domain={[0, 9000]}\n                />\n              </Loader>\n            </div>\n          </Widget>\n\n          <div className={styles.smallWidgets}>\n              <SmallAreaChartWidget title=\"realtime users\" value={56} swing={9.8} stroke=\"#1e69d4\" fill=\"#e7eff9\"/>\n              <SmallAreaChartWidget title=\"total visits\" value={Intl.NumberFormat('en-IN').format(54598)} swing={-11.9} stroke=\"#40ac4f\" fill=\"#eaf6ec\"/>\n              <SmallAreaChartWidget title=\"bounce rate\" value=\"73.67 %\" swing={12.2} stroke=\"#7269f0\" fill=\"#efeefd\"/>\n              <SmallAreaChartWidget title=\"visit duration\" value=\"1m 4s\" swing={19.6} stroke=\"#f9d169\" fill=\"#fefaef\"/>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nimport Button from \"../button/Button\";\nimport styles from './profile.module.scss';\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <Button className={styles.settings} onFocusClassName={styles.settingsOnFocus}>\n          <FontAwesomeIcon icon={faCog}/>\n        </Button>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\nimport Button from \"../button/Button\";\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n    isContentVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: !!this.props.header.isOpen,\n      isContentVisible: !!this.props.header.isOpen,\n    });\n  }\n\n  toggleOpen = () => {\n    if (!this.props.options) {\n      return;\n    }\n\n    const {isOpen} = this.state;\n\n    this.setState({isOpen: !isOpen, isContentVisible: true});\n  };\n\n  toggleContentVisibility = () => {\n    const {isOpen} = this.state;\n    this.setState({isContentVisible: isOpen});\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen, isContentVisible} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <Button\n              className={classNames(styles.option, styles.header, {\n                [styles.isOpen]: isOpen,\n              })}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </Button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {\n              [styles.isOpen]: isOpen,\n              [styles.isContentVisible]: isContentVisible,\n            })}\n                 onTransitionEnd={this.toggleContentVisibility}\n            >\n              {\n                options.map(option => (\n                    <Button key={option.label} className={styles.option}>{option.label}</Button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './recentlyViewed.module.scss';\nimport {faLongArrowAltRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Button from \"../button/Button\";\n\nconst RecentlyViewed = ({\n    className\n}) => (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.header}>Recently Viewed</div>\n      <Button className={styles.option}>Overall Performance <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Invoice #930 <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Customer: Minerva Viewer <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n    </div>\n);\nRecentlyViewed.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RecentlyViewed;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCalendar, faColumns, faHome, faInbox, faReceipt, faVial,} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\nimport RecentlyViewed from \"../recentlyViewed/RecentlyViewed\";\n\nimport Button from \"../button/Button\";\nimport styles from './navBar.module.scss'\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <Button className={classNames(styles.home, styles.option)}>\n          <FontAwesomeIcon icon={faHome}/>\n        </Button>\n        <div className={classNames(styles.option)}><Profile/></div>\n        <div className={styles.scrollable}>\n          {\n            navBarOptions.map(option => (\n                <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                  <Accordion {...option}/>\n                </div>\n            ))\n          }\n          <div className={classNames(styles.option, styles.secondaryOption)}><RecentlyViewed/></div>\n        </div>\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Dropdown from \"../dropdown/Dropdown\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Dropdown\n            options={languageOptions}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltipContainer\":\"dailyVisitorsChart_tooltipContainer__7PaSn\",\"date\":\"dailyVisitorsChart_date__3_6Y4\",\"visitsContainer\":\"dailyVisitorsChart_visitsContainer__2w38Y\",\"legend\":\"dailyVisitorsChart_legend__2mcAp\",\"label\":\"dailyVisitorsChart_label__2Q0GX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"recentlyViewed_container__2mghy\",\"header\":\"recentlyViewed_header__2-OZm\",\"option\":\"recentlyViewed_option__2F_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swing\":\"swing_swing__2xpX6\",\"icon\":\"swing_icon__dRu5j\",\"isPositive\":\"swing_isPositive__1FmZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"btnFocus\":\"button_btnFocus__h_Wtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__2zY8R\",\"ldsRing\":\"loader_ldsRing__3hE5J\",\"lds-ring\":\"loader_lds-ring__3FXaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};"],"sourceRoot":""}