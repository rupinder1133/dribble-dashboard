{"version":3,"sources":["pages/dashboard/dashboard.module.scss","components/accordion/accordion.module.scss","components/dropdown/dropdown.module.scss","components/profile/profile.module.scss","components/widget/widget.module.scss","components/navbar/navBar.module.scss","serviceWorker.js","components/widget/Widget.js","components/button/Button.js","components/dropdown/Dropdown.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/accordion/Accordion.js","components/recentlyViewed/RecentlyViewed.js","components/navbar/NavBar.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js","components/recentlyViewed/recentlyViewed.module.scss","components/button/button.module.scss","app.module.scss","components/userStatus/userStatus.module.scss","components/header/header.module.scss"],"names":["module","exports","header","filterOptions","filter","months","chartContainer","tooltipContainer","date","visitsContainer","legend","label","container","controlIcons","headerIcon","headerLabel","options","isOpen","isContentVisible","option","select","optionCommonStyle","placeholder","placeholderLabel","fullWidth","profileElements","profile","image","name","status","description","settings","settingsOnFocus","home","secondaryOption","scrollable","Boolean","window","location","hostname","match","Widget","_ref","children","className","react_default","a","createElement","classNames","styles","Button","state","inFocus","onFocus","_this","setState","onBlur","_classNames","_this$props","this","props","onClick","onFocusClassName","button","Object","defineProperty","btnFocus","onMouseUp","onMouseDown","Component","closedIcon","index_es","icon","faCaretUp","faCaretDown","openIcon","Dropdown","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","document","addEventListener","handleOutsideClick","handleEsc","removeEventListener","e","key","selectOption","index","selectedOptionIndex","mayBeSelectedOptionIndex","findIndex","o","value","selectedValue","expandOptionsToFullWidth","maxOptions","optionHeight","optionsRef","clientHeight","maxOptionWidth","Array","from","map","clientWidth","reduce","max","style","maxHeight","concat","containerRef","minWidth","_this2","_this$props2","placeHolder","_this$state","effectivePlaceholder","ref","button_Button","defaultProps","years","data","toConsumableArray","x","y","Math","round","random","tickFormatter","renderTooltip","active","payload","Dashboard","widget_Widget","headerWidget","dropdown_Dropdown","es6","width","height","barSize","stroke","vertical","dataKey","axisLine","tickLine","tick","fill","fontSize","tickMargin","ticks","orientation","tickSize","dy","cursor","content","UserStatus","online","Profile","faCog","userStatus_UserStatus","Accordion","toggleContentVisibility","_classNames2","onTransitionEnd","RecentlyViewed","faLongArrowAltRight","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","faHome","profile_Profile","accordion_Accordion","recentlyViewed_RecentlyViewed","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","flagIcon","App","appContainer","navbar_NavBar","mainContent","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,OAAA,0BAAAC,cAAA,iCAAAC,OAAA,0BAAAC,OAAA,0BAAAC,eAAA,kCAAAC,iBAAA,oCAAAC,KAAA,wBAAAC,gBAAA,mCAAAC,OAAA,0BAAAC,MAAA,8CCAlBX,EAAAC,QAAA,CAAkBW,UAAA,6BAAAC,aAAA,gCAAAC,WAAA,8BAAAC,YAAA,+BAAAC,QAAA,2BAAAC,OAAA,0BAAAC,iBAAA,oCAAAC,OAAA,0BAAAjB,OAAA,+CCAlBF,EAAAC,QAAA,CAAkBmB,OAAA,yBAAAC,kBAAA,oCAAAC,YAAA,8BAAAH,OAAA,yBAAAI,iBAAA,mCAAAP,QAAA,0BAAAC,OAAA,yBAAAJ,aAAA,+BAAAW,UAAA,iDCAlBxB,EAAAC,QAAA,CAAkBwB,gBAAA,iCAAAC,QAAA,yBAAAC,MAAA,uBAAAC,KAAA,sBAAAC,OAAA,wBAAAC,YAAA,6BAAAC,SAAA,0BAAAC,gBAAA,uDCAlBhC,EAAAC,QAAA,CAAkBW,UAAA,2GCAlBZ,EAAAC,QAAA,CAAkBgC,KAAA,qBAAAd,OAAA,uBAAAe,gBAAA,gCAAAC,WAAA,iHCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kHCASC,EAbA,SAAAC,GAAA,IACGC,EADHD,EACGC,SACAC,EAFHF,EAEGE,UAFH,OAIXC,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOrC,UAAWgC,IAC1CD,oGCuCQO,6MA3CbC,MAAQ,CACNC,SAAS,KAGXC,QAAU,WACRC,EAAKC,SAAS,CAACH,SAAS,OAG1BI,OAAS,WACP,OAAOF,EAAKC,SAAS,CAACH,SAAS,6EAGxB,IAAAK,EAAAC,EACkDC,KAAKC,MAAvDjB,EADAe,EACAf,SAAUC,EADVc,EACUd,UAAWiB,EADrBH,EACqBG,QAASC,EAD9BJ,EAC8BI,iBAC9BV,EAAWO,KAAKR,MAAhBC,QAEP,OACIP,EAAAC,EAAAC,cAAA,UACIH,UAAWI,IACPC,IAAOc,OACPnB,GAFiBa,EAAA,GAAAO,OAAAC,EAAA,EAAAD,CAAAP,EAIdR,IAAOiB,SAAWd,GAJJY,OAAAC,EAAA,EAAAD,CAAAP,EAKdK,EAAmBV,GALLK,IAQrBJ,QAASM,KAAKN,QACdG,OAAQG,KAAKH,OACbW,UAAWR,KAAKH,OAChBY,YAAaT,KAAKN,QAClBQ,QAASA,GAEVlB,UAjCU0B,8BCIfC,EAAazB,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOpC,cACxCgC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAMC,MACvB5B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAME,OAGnBC,EAAW9B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOpC,cACtCgC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAME,OAGnBE,cACJ,SAAAA,EAAYhB,GAAO,IAAAN,EAAAU,OAAAa,EAAA,EAAAb,CAAAL,KAAAiB,IACjBtB,EAAAU,OAAAc,EAAA,EAAAd,CAAAL,KAAAK,OAAAe,EAAA,EAAAf,CAAAY,GAAAI,KAAArB,KAAMC,KA0BRqB,WAAa,WAAM,IACVhE,EAAUqC,EAAKH,MAAflC,OACPqC,EAAKC,SAAS,CAACtC,QAASA,GAAS,WAC3BqC,EAAKH,MAAMlC,QACbiE,SAASC,iBAAiB,QAAS7B,EAAK8B,oBACxCF,SAASC,iBAAiB,UAAW7B,EAAK+B,aAE1CH,SAASI,oBAAoB,QAAShC,EAAK8B,oBAC3CF,SAASI,oBAAoB,UAAWhC,EAAK+B,eAnChC/B,EAwCnB8B,mBAAqB,SAACG,GACpBjC,EAAK2B,WAAWM,IAzCCjC,EA4CnB+B,UAAY,SAACE,GACG,WAAVA,EAAEC,KACJlC,EAAK2B,WAAWM,IA9CDjC,EAkDnBmC,aAAe,SAACF,EAAGG,GAAU,IAAAhC,EAIvBJ,EAAKM,MAFP5C,EAFyB0C,EAEzB1C,QACA6C,EAHyBH,EAGzBG,QAGFP,EAAKC,SAAS,CAACoC,oBAAqBD,GAAQpC,EAAK2B,YACjDpB,GAAWA,EAAQ0B,EAAGvE,EAAQ0E,KAtD9B,IAAME,EAA2BhC,EAAM5C,QAAQ6E,UAAU,SAAAC,GAAC,OAAIA,EAAEC,QAAUnC,EAAMoC,gBAC1EL,GAAoD,IAA9BC,EAAkC,EAAIA,EAJjD,OAMjBtC,EAAKH,MAAQ,CACXlC,QAAQ,EACR0E,sBACAM,0BAA0B,GATX3C,mFAaC,IACX4C,EAAcvC,KAAKC,MAAnBsC,WAEDC,EAAexC,KAAKyC,WAAWzD,SAAS,GAAG0D,aAC3CC,EAAiBC,MAAMC,KAAK7C,KAAKyC,WAAWzD,UAC7C8D,IAAI,SAAAX,GAAC,OAAIA,EAAEY,cAEXC,OAAO,SAACC,EAAKb,GAAN,OAAgBa,EAAMb,EAAQa,EAAMb,GAAO,GAEvDpC,KAAKyC,WAAWS,MAAMC,UAAtB,GAAAC,OAAsCb,EAAaC,EAAgBA,EAAe,EAAlF,MACAxC,KAAKqD,aAAaH,MAAMI,SAAxB,GAAAF,OAAsCT,EAAiB,GAAvD,MACA3C,KAAKJ,SAAS,CAACtC,QAAQ,EAAOgF,0BAA0B,qCAoCjD,IAAAiB,EAAAvD,KAAAwD,EAKHxD,KAAKC,MAHP5C,EAFKmG,EAELnG,QACAoG,EAHKD,EAGLC,YACAxE,EAJKuE,EAILvE,UAJKyE,EAWH1D,KAAKR,MAHPwC,EARK0B,EAQL1B,oBACA1E,EATKoG,EASLpG,OACAgF,EAVKoB,EAULpB,yBAGIqB,EAAuBF,GAAepG,EAAQ2E,GAAqBhF,MAEzE,OACIkC,EAAAC,EAAAC,cAAA,OACIH,UAAWI,IAAWC,IAAO7B,OAAQwB,GACrC2E,IAAK,SAAAA,GAAQL,EAAKF,aAAeO,IAEnC1E,EAAAC,EAAAC,cAACyE,EAAD,CACI5E,UAAWI,IAAWC,IAAO3B,YAAR0C,OAAAC,EAAA,EAAAD,CAAA,GAAwBf,IAAOzB,UAAYyE,IAChEpC,QAASF,KAAKsB,YAEhBpC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO1B,kBAAmB+F,GACzCrG,EAAS0D,EAAWL,GAEvBzB,EAAAC,EAAAC,cAAA,OACIH,UAAWI,IAAWC,IAAOjC,QAARgD,OAAAC,EAAA,EAAAD,CAAA,GAAmBf,IAAOhC,OAASA,IACxDsG,IAAK,SAAAA,GACHL,EAAKd,WAAamB,IAGrBvG,EAAQyF,IAAI,SAACtF,EAAQuE,GAAT,OACT7C,EAAAC,EAAAC,cAACyE,EAAD,CACIhC,IAAKrE,EAAO4E,MACZnD,UAAWI,IAAWC,IAAO9B,OAAR6C,OAAAC,EAAA,EAAAD,CAAA,GAAmBf,IAAOzB,UAAYyE,IAC3DpC,QAAS,SAAC0B,GAAD,OAAO2B,EAAKzB,aAAaF,EAAGG,KAEtCvE,EAAOR,kBApGH0D,aA4GvBO,EAAS6C,aAAe,CACtBvB,WAAY,GAaCtB,QCrITvE,EAAS,CACb,CAAC0F,MAAO,MAAOpF,MAAO,WACtB,CAACoF,MAAO,MAAOpF,MAAO,YACtB,CAACoF,MAAO,MAAOpF,MAAO,SACtB,CAACoF,MAAO,MAAOpF,MAAO,SACtB,CAACoF,MAAO,MAAOpF,MAAO,OACtB,CAACoF,MAAO,MAAOpF,MAAO,QACtB,CAACoF,MAAO,MAAOpF,MAAO,QACtB,CAACoF,MAAO,MAAOpF,MAAO,UACtB,CAACoF,MAAO,MAAOpF,MAAO,aACtB,CAACoF,MAAO,MAAOpF,MAAO,WACtB,CAACoF,MAAO,MAAOpF,MAAO,YACtB,CAACoF,MAAO,MAAOpF,MAAO,aAGlB+G,EAAQ,CACZ,CAAC3B,MAAO,KAAMpF,MAAO,QACrB,CAACoF,MAAO,KAAMpF,MAAO,QACrB,CAACoF,MAAO,KAAMpF,MAAO,QACrB,CAACoF,MAAO,KAAMpF,MAAO,SAGjBgH,EAAO3D,OAAA4D,EAAA,EAAA5D,CAAIuC,MAAM,KAAKE,IAAI,SAAClB,EAAGG,GAAJ,MAAe,CAC7CmC,EAAGnC,EAAQ,EACXoC,EAAGC,KAAKC,MAAM,IAAAD,KAAKE,SAA2B,SAI1CC,EAAgB,SAACnC,GAAD,OAAqB,IAAVA,EAAA,GAAAgB,OAAiBhB,EAAQ,IAAzB,KAAmC,IAE9DoC,EAAgB,SAAAzF,GAAA,IAAE0F,EAAF1F,EAAE0F,OAAQC,EAAV3F,EAAU2F,QAAS1H,EAAnB+B,EAAmB/B,MAAnB,OAECyH,EACbvF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO1C,kBACrBsC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOzC,MAAOG,GAC9BkC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOxC,iBACrBoC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOvC,SACvBmC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOtC,OAAvB,YACAkC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,cAASsF,EAAQ,GAAGtC,UARjB,MAoEPuC,EAtDG,WAChB,OACIzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwF,EAAD,CAAQ3F,UAAWK,IAAOuF,cACxB3F,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO/C,QACrB2C,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO9C,eACrB0C,EAAAC,EAAAC,cAAC0F,EAAD,CACIzH,QAASX,EACT2F,cAAe3F,EAAO,IAAI0F,MAC1BnD,UAAWI,IAAWC,IAAO7C,OAAQ6C,IAAO5C,UAEhDwC,EAAAC,EAAAC,cAAC0F,EAAD,CACIzH,QAAS0G,EACT1B,cAAe0B,EAAM,GAAG3B,MACxBnD,UAAWI,IAAWC,IAAO7C,YAIrCyC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO3C,gBACrBuC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAQ,IAAKhG,UAAU,+BACvDC,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAUf,KAAMA,EAAMkB,QAAS,IAC7BhG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACII,OAAO,UACPC,UAAU,IAEdlG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACIM,QAAQ,IACRC,UAAU,EACVC,UAAU,EACVC,KAAM,CAACC,KAAM,UAAWC,SAAU,IAClCC,WAAY,IAEhBzG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACIa,MAAO,CAAC,EAAG,IAAM,IAAM,KACvBrB,cAAeA,EACfsB,YAAY,QACZP,UAAU,EACVC,SAAU,CAACJ,OAAQ,WACnBW,SAAU,GACVd,MAAO,GACPQ,KAAM,CAACC,KAAM,UAAWC,SAAU,GAAIK,GAAI,IAC1CJ,YAAa,KAEjBzG,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAASiB,QAAQ,EAAOC,QAASzB,IACjCtF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAKM,QAAQ,IAAII,KAAK,oDCxFvBS,EAJI,SAAAnH,GAAA,IAAGE,EAAHF,EAAGE,UAAH,OACfC,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOpB,OAAQoB,IAAO6G,OAAQlH,uBCmB9CmH,EAfC,kBACZlH,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOvB,SACrBmB,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOtB,MAAOsB,IAAOxB,kBAC9CoB,EAAAC,EAAAC,cAACyE,EAAD,CAAQ5E,UAAWK,IAAOlB,SAAU+B,iBAAkBb,IAAOjB,iBAC3Da,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAMwF,QAG3BnH,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOrB,KAAMqB,IAAOxB,kBAC7CoB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACkH,EAAD,CAAYrH,UAAWK,IAAOpB,UAEhCgB,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOnB,YAAamB,IAAOxB,kBAAtD,gCCZA6C,EAAazB,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOpC,cACxCgC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAMC,MACvB5B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAME,OAGnBC,EAAW9B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOpC,cACtCgC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAME,OAkFVwF,6MA9Eb/G,MAAQ,CACNlC,QAAQ,EACRC,kBAAkB,KAUpB+D,WAAa,WACX,GAAK3B,EAAKM,MAAM5C,QAAhB,CADiB,IAKVC,EAAUqC,EAAKH,MAAflC,OAEPqC,EAAKC,SAAS,CAACtC,QAASA,EAAQC,kBAAkB,QAGpDiJ,wBAA0B,WAAM,IACvBlJ,EAAUqC,EAAKH,MAAflC,OACPqC,EAAKC,SAAS,CAACrC,iBAAkBD,wFAlBjC0C,KAAKJ,SAAS,CACZtC,SAAU0C,KAAKC,MAAM1D,OAAOe,OAC5BC,mBAAoByC,KAAKC,MAAM1D,OAAOe,0CAmBjC,IAAAmJ,EAAA1G,EACmBC,KAAKC,MAAxB1D,EADAwD,EACAxD,OAAQc,EADR0C,EACQ1C,QADRqG,EAE4B1D,KAAKR,MAAjClC,EAFAoG,EAEApG,OAAQC,EAFRmG,EAEQnG,iBAEf,OACI2B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOrC,WACrBiC,EAAAC,EAAAC,cAACyE,EAAD,CACI5E,UAAWI,IAAWC,IAAO9B,OAAQ8B,IAAO/C,OAAvB8D,OAAAC,EAAA,EAAAD,CAAA,GAClBf,IAAOhC,OAASA,IAEnB4C,QAASF,KAAKsB,YAEhBpC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIC,KAAMtE,EAAOsE,KACb5B,UAAWK,IAAOnC,aAEtB+B,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAOlC,aAAcb,EAAOS,OAC7BK,EACZC,EAAS0D,EAAWL,EAZzB,MAeetD,EACb6B,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOjC,SAARoJ,EAAA,GAAApG,OAAAC,EAAA,EAAAD,CAAAoG,EACvBnH,IAAOhC,OAASA,GADO+C,OAAAC,EAAA,EAAAD,CAAAoG,EAEvBnH,IAAO/B,iBAAmBA,GAFHkJ,IAIrBC,gBAAiB1G,KAAKwG,yBAGvBnJ,EAAQyF,IAAI,SAAAtF,GAAM,OACd0B,EAAAC,EAAAC,cAACyE,EAAD,CAAQhC,IAAKrE,EAAOR,MAAOiC,UAAWK,IAAO9B,QAASA,EAAOR,UAzBzE,aAjCgB0D,8BCKTiG,GAdQ,SAAA5H,GAAA,IACnBE,EADmBF,EACnBE,UADmB,OAGnBC,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,IAAOrC,UAAWgC,IAC3CC,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO/C,QAAvB,mBACA2C,EAAAC,EAAAC,cAACyE,EAAD,CAAQ5E,UAAWK,IAAO9B,QAA1B,uBAAsD0B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM+F,OAC7E1H,EAAAC,EAAAC,cAACyE,EAAD,CAAQ5E,UAAWK,IAAO9B,QAA1B,gBAA+C0B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM+F,OACtE1H,EAAAC,EAAAC,cAACyE,EAAD,CAAQ5E,UAAWK,IAAO9B,QAA1B,4BAA2D0B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAM+F,6BCJlFC,GAAgB,CACpB,CACEtK,OAAQ,CACNsE,KAAMiG,IACN9J,MAAO,YACPM,QAAQ,GAEVD,QAAS,CACP,CAACL,MAAO,iBACR,CAACA,MAAO,oBACR,CAACA,MAAO,kBAGZ,CACET,OAAQ,CACNsE,KAAMkG,IACN/J,MAAO,aAGX,CACET,OAAQ,CACNsE,KAAMmG,IACNhK,MAAO,SAETK,QAAS,CACP,CAACL,MAAO,WACR,CAACA,MAAO,YAIZ,CACET,OAAQ,CACNsE,KAAMoG,IACNjK,MAAO,cAGX,CACET,OAAQ,CACNsE,KAAMqG,IACNlK,MAAO,wBA0BEmK,GArBA,WACb,OACIjI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,EAAD,CAAQ5E,UAAWI,IAAWC,KAAOhB,KAAMgB,KAAO9B,SAChD0B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAiBC,KAAMuG,OAEzBlI,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,KAAO9B,SAAS0B,EAAAC,EAAAC,cAACiI,EAAD,OAC3CnI,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,KAAOd,YAEnBqI,GAAc/D,IAAI,SAAAtF,GAAM,OACpB0B,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,KAAO9B,OAAQ8B,KAAOf,iBAAkBsD,IAAKrE,EAAOjB,OAAOS,OACpFkC,EAAAC,EAAAC,cAACkI,EAAc9J,MAIvB0B,EAAAC,EAAAC,cAAA,OAAKH,UAAWI,IAAWC,KAAO9B,OAAQ8B,KAAOf,kBAAkBW,EAAAC,EAAAC,cAACmI,GAAD,wCCjE9DC,GAFEC,aAAgBC,IAAO,CAAEC,eAAe,ICkB1CC,GAhBA,WACb,IAAMC,EAAkB,CACtB,CAACzF,MAAO,KAAMpF,MAAOkC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC0I,GAAD,CAAUC,KAAK,KAAK9I,UAAWK,KAAO0I,WAA5C,QACrB,CAAC5F,MAAO,KAAMpF,MAAOkC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC0I,GAAD,CAAUC,KAAK,KAAK9I,UAAWK,KAAO0I,WAA5C,YAGvB,OACI9I,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC0F,EAAD,CACIzH,QAASwK,MCKNI,GAdH,WACV,OACI/I,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO4I,cACrBhJ,EAAAC,EAAAC,cAAC+I,GAAD,MACAjJ,EAAAC,EAAAC,cAAA,OAAKH,UAAWK,IAAO8I,aACrBlJ,EAAAC,EAAAC,cAACiJ,GAAD,MACAnJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACkJ,EAAD,UCPZC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,GAAD,MAASlH,SAASmH,eAAe,Sb2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCclInB3M,EAAAC,QAAA,CAAkBW,UAAA,kCAAAV,OAAA,+BAAAiB,OAAA,oDCAlBnB,EAAAC,QAAA,CAAkB8D,OAAA,uBAAAG,SAAA,8CCAlBlE,EAAAC,QAAA,CAAkB4L,aAAA,0BAAAE,YAAA,8CCAlB/L,EAAAC,QAAA,CAAkB4B,OAAA,2BAAAiI,OAAA,gDCAlB9J,EAAAC,QAAA,CAAkB0L,SAAA","file":"static/js/main.ac5ad34c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dashboard_header__2gN8S\",\"filterOptions\":\"dashboard_filterOptions__uxzD5\",\"filter\":\"dashboard_filter__18gax\",\"months\":\"dashboard_months__3y13N\",\"chartContainer\":\"dashboard_chartContainer__27p65\",\"tooltipContainer\":\"dashboard_tooltipContainer__3MsjV\",\"date\":\"dashboard_date__32Ghq\",\"visitsContainer\":\"dashboard_visitsContainer__3HUPB\",\"legend\":\"dashboard_legend__uWEdK\",\"label\":\"dashboard_label__wG_rU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"isContentVisible\":\"accordion_isContentVisible__3mmRQ\",\"option\":\"accordion_option__2uaXo\",\"header\":\"accordion_header__KSBK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"dropdown_select__2Z59b\",\"optionCommonStyle\":\"dropdown_optionCommonStyle__3fumI\",\"placeholder\":\"dropdown_placeholder__jle5-\",\"option\":\"dropdown_option__3SZgp\",\"placeholderLabel\":\"dropdown_placeholderLabel__3TXeS\",\"options\":\"dropdown_options__lYzgy\",\"isOpen\":\"dropdown_isOpen__2vVkH\",\"controlIcons\":\"dropdown_controlIcons__z1VsC\",\"fullWidth\":\"dropdown_fullWidth__OGBS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\",\"settingsOnFocus\":\"profile_settingsOnFocus__3M4G_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"widget_container__1ThYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\",\"scrollable\":\"navBar_scrollable__tz26l\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './widget.module.scss';\n\nconst Widget = ({\n                  children,\n                  className,\n                }) => (\n    <div className={classNames(styles.container, className)}>\n      {children}\n    </div>\n);\nWidget.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Widget;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nclass Button extends Component {\n  state = {\n    inFocus: false,\n  };\n\n  onFocus = () => {\n    this.setState({inFocus: true});\n  };\n\n  onBlur = () => {\n    return this.setState({inFocus: false});\n  };\n\n  render() {\n    const {children, className, onClick, onFocusClassName} = this.props;\n    const {inFocus} = this.state;\n\n    return (\n        <button\n            className={classNames(\n                styles.button,\n                className,\n                {\n                  [styles.btnFocus]: inFocus,\n                  [onFocusClassName]: inFocus,\n                },\n            )}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onMouseUp={this.onBlur}\n            onMouseDown={this.onFocus}\n            onClick={onClick}\n        >\n          {children}\n        </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onFocusClassName: PropTypes.string,\n};\n\nexport default Button;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nimport Button from \"../button/Button\";\nimport styles from './dropdown.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const mayBeSelectedOptionIndex = props.options.findIndex(o => o.value === props.selectedValue);\n    const selectedOptionIndex = mayBeSelectedOptionIndex === -1 ? 0 : mayBeSelectedOptionIndex;\n\n    this.state = {\n      isOpen: true,\n      selectedOptionIndex,\n      expandOptionsToFullWidth: false,\n    };\n  }\n\n  componentDidMount() {\n    const {maxOptions} = this.props;\n\n    const optionHeight = this.optionsRef.children[0].clientHeight;\n    const maxOptionWidth = Array.from(this.optionsRef.children)\n        .map(o => o.clientWidth)\n\n        .reduce((max, value) => max > value ? max : value, 0);\n\n    this.optionsRef.style.maxHeight = `${(maxOptions * optionHeight) + optionHeight / 2}px`;\n    this.containerRef.style.minWidth = `${maxOptionWidth + 30}px`;\n    this.setState({isOpen: false, expandOptionsToFullWidth: true });\n  }\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen}, () => {\n      if (this.state.isOpen) {\n        document.addEventListener('click', this.handleOutsideClick);\n        document.addEventListener('keydown', this.handleEsc);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('keydown', this.handleEsc);\n      }\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    this.toggleOpen(e);\n  };\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.toggleOpen(e)\n    }\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    this.setState({selectedOptionIndex: index}, this.toggleOpen);\n    onClick && onClick(e, options[index]);\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n      expandOptionsToFullWidth,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div\n            className={classNames(styles.select, className)}\n            ref={ref => {this.containerRef = ref;}}\n        >\n          <Button\n              className={classNames(styles.placeholder, { [styles.fullWidth]: expandOptionsToFullWidth })}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            {isOpen ? openIcon : closedIcon}\n          </Button>\n          <div\n              className={classNames(styles.options, {[styles.isOpen]: isOpen})}\n              ref={ref => {\n                this.optionsRef = ref;\n              }}\n          >\n            {options.map((option, index) =>\n                <Button\n                    key={option.value}\n                    className={classNames(styles.option, { [styles.fullWidth]: expandOptionsToFullWidth })}\n                    onClick={(e) => this.selectOption(e, index)}\n                >\n                  {option.label}\n                </Button>\n            )}\n          </div>\n        </div>\n    )\n  }\n}\nDropdown.defaultProps = {\n  maxOptions: 5,\n};\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n  selectedValue: PropTypes.string,\n  className: PropTypes.string,\n  maxOptions: PropTypes.number.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport {Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\nimport classNames from 'classnames';\nimport Widget from \"../../components/widget/Widget\";\nimport styles from './dashboard.module.scss';\nimport Dropdown from \"../../components/dropdown/Dropdown\";\n\nconst months = [\n  {value: 'jan', label: 'January'},\n  {value: 'feb', label: 'February'},\n  {value: 'mar', label: 'March'},\n  {value: 'apr', label: 'April'},\n  {value: 'may', label: 'May'},\n  {value: 'jun', label: 'June'},\n  {value: 'jul', label: 'July'},\n  {value: 'aug', label: 'August'},\n  {value: 'sep', label: 'September'},\n  {value: 'oct', label: 'October'},\n  {value: 'nov', label: 'November'},\n  {value: 'dec', label: 'December'},\n];\n\nconst years = [\n  {value: '15', label: '2015'},\n  {value: '16', label: '2016'},\n  {value: '18', label: '2018'},\n  {value: '19', label: '2019'},\n];\n\nconst data = [...Array(31)].map((e, index) => ({\n  x: index + 1,\n  y: Math.round(Math.random() * (8500 - 1500) + 1500),\n}));\n\n\nconst tickFormatter = (value) => value !== 1 ? `${value / 1000}K` : '';\n\nconst renderTooltip = ({active, payload, label}) =>\n    (\n        <If condition={active}>\n          <div className={styles.tooltipContainer}>\n            <div className={styles.date}>{label}</div>\n            <div className={styles.visitsContainer}>\n              <div className={styles.legend}/>\n              <div className={styles.label}>Visitors</div>\n              <div><strong>{payload[0].value}</strong></div>\n            </div>\n          </div>\n        </If>\n    );\n\nconst Dashboard = () => {\n  return (\n      <div>\n        <Widget className={styles.headerWidget}>\n          <div className={styles.header}>\n            <strong>Daily Visitors</strong>\n            <div className={styles.filterOptions}>\n              <Dropdown\n                  options={months}\n                  selectedValue={months[11].value}\n                  className={classNames(styles.filter, styles.months)}\n              />\n              <Dropdown\n                  options={years}\n                  selectedValue={years[2].value}\n                  className={classNames(styles.filter)}\n              />\n            </div>\n          </div>\n          <div className={styles.chartContainer}>\n            <ResponsiveContainer width=\"100%\" height={200} className=\"dailyVisitorsChartContainer\">\n              <BarChart data={data} barSize={12}>\n                <CartesianGrid\n                    stroke=\"#e2e5ee\"\n                    vertical={false}\n                />\n                <XAxis\n                    dataKey=\"x\"\n                    axisLine={false}\n                    tickLine={false}\n                    tick={{fill: '#93949a', fontSize: 10}}\n                    tickMargin={5}\n                />\n                <YAxis\n                    ticks={[1, 3000, 6000, 9000]}\n                    tickFormatter={tickFormatter}\n                    orientation=\"right\"\n                    axisLine={false}\n                    tickLine={{stroke: '#e2e5ee'}}\n                    tickSize={18}\n                    width={25}\n                    tick={{fill: '#93949a', fontSize: 10, dy: 15}}\n                    tickMargin={-16}\n                />\n                <Tooltip cursor={false} content={renderTooltip}/>\n                <Bar dataKey=\"y\" fill=\"#1D68D5\"/>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </Widget>\n      </div>\n  )\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nimport Button from \"../button/Button\";\nimport styles from './profile.module.scss';\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <Button className={styles.settings} onFocusClassName={styles.settingsOnFocus}>\n          <FontAwesomeIcon icon={faCog}/>\n        </Button>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\nimport Button from \"../button/Button\";\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n    isContentVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: !!this.props.header.isOpen,\n      isContentVisible: !!this.props.header.isOpen,\n    });\n  }\n\n  toggleOpen = () => {\n    if (!this.props.options) {\n      return;\n    }\n\n    const {isOpen} = this.state;\n\n    this.setState({isOpen: !isOpen, isContentVisible: true});\n  };\n\n  toggleContentVisibility = () => {\n    const {isOpen} = this.state;\n    this.setState({isContentVisible: isOpen});\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen, isContentVisible} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <Button\n              className={classNames(styles.option, styles.header, {\n                [styles.isOpen]: isOpen,\n              })}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </Button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {\n              [styles.isOpen]: isOpen,\n              [styles.isContentVisible]: isContentVisible,\n            })}\n                 onTransitionEnd={this.toggleContentVisibility}\n            >\n              {\n                options.map(option => (\n                    <Button key={option.label} className={styles.option}>{option.label}</Button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './recentlyViewed.module.scss';\nimport {faLongArrowAltRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Button from \"../button/Button\";\n\nconst RecentlyViewed = ({\n    className\n}) => (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.header}>Recently Viewed</div>\n      <Button className={styles.option}>Overall Performance <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Invoice #930 <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Customer: Minerva Viewer <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n    </div>\n);\nRecentlyViewed.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RecentlyViewed;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCalendar, faColumns, faHome, faInbox, faReceipt, faVial,} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\nimport RecentlyViewed from \"../recentlyViewed/RecentlyViewed\";\n\nimport Button from \"../button/Button\";\nimport styles from './navBar.module.scss'\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <Button className={classNames(styles.home, styles.option)}>\n          <FontAwesomeIcon icon={faHome}/>\n        </Button>\n        <div className={classNames(styles.option)}><Profile/></div>\n        <div className={styles.scrollable}>\n          {\n            navBarOptions.map(option => (\n                <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                  <Accordion {...option}/>\n                </div>\n            ))\n          }\n          <div className={classNames(styles.option, styles.secondaryOption)}><RecentlyViewed/></div>\n        </div>\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Dropdown from \"../dropdown/Dropdown\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Dropdown\n            options={languageOptions}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"recentlyViewed_container__2mghy\",\"header\":\"recentlyViewed_header__2-OZm\",\"option\":\"recentlyViewed_option__2F_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"btnFocus\":\"button_btnFocus__h_Wtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\"};"],"sourceRoot":""}