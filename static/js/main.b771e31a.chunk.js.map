{"version":3,"sources":["components/accordion/accordion.module.scss","components/profile/profile.module.scss","components/widget/widget.module.scss","pages/dashboard/dashboard.module.scss","components/navbar/navBar.module.scss","components/dropdown/dropdown.module.scss","serviceWorker.js","components/widget/Widget.js","components/button/Button.js","components/dropdown/Dropdown.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/accordion/Accordion.js","components/recentlyViewed/RecentlyViewed.js","components/navbar/NavBar.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js","components/recentlyViewed/recentlyViewed.module.scss","components/header/header.module.scss","components/button/button.module.scss","app.module.scss","components/userStatus/userStatus.module.scss"],"names":["module","exports","container","controlIcons","headerIcon","headerLabel","options","isOpen","isContentVisible","option","header","profileElements","profile","image","name","status","description","settings","settingsOnFocus","filterOptions","filter","months","chartContainer","font","home","secondaryOption","scrollable","select","optionCommonStyle","placeholder","placeholderLabel","Boolean","window","location","hostname","match","Widget","_ref","children","className","react_default","a","createElement","classNames","styles","Button","state","inFocus","onFocus","_this","setState","onBlur","_classNames","_this$props","this","props","onClick","onFocusClassName","button","Object","defineProperty","btnFocus","onMouseUp","onMouseDown","Component","closedIcon","index_es","icon","faCaretUp","faCaretDown","openIcon","Dropdown","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","document","addEventListener","handleOutsideClick","handleEsc","removeEventListener","e","key","selectOption","index","selectedOptionIndex","mayBeSelectedOptionIndex","findIndex","o","value","selectedValue","_this2","_this$props2","placeHolder","_this$state","effectivePlaceholder","label","button_Button","map","years","data","toConsumableArray","Array","x","y","Math","round","random","tickFormatter","concat","Dashboard","widget_Widget","headerWidget","dropdown_Dropdown","es6","width","height","barSize","stroke","vertical","dataKey","axisLine","tickLine","tick","fill","fontSize","tickMargin","ticks","orientation","cursor","UserStatus","online","Profile","faCog","userStatus_UserStatus","Accordion","toggleContentVisibility","_classNames2","onTransitionEnd","RecentlyViewed","faLongArrowAltRight","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","faHome","profile_Profile","accordion_Accordion","recentlyViewed_RecentlyViewed","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","flagIcon","languageSelect","App","appContainer","navbar_NavBar","mainContent","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b771e31a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"isContentVisible\":\"accordion_isContentVisible__3mmRQ\",\"option\":\"accordion_option__2uaXo\",\"header\":\"accordion_header__KSBK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\",\"settingsOnFocus\":\"profile_settingsOnFocus__3M4G_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"widget_container__1ThYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dashboard_header__2gN8S\",\"filterOptions\":\"dashboard_filterOptions__uxzD5\",\"filter\":\"dashboard_filter__18gax\",\"months\":\"dashboard_months__3y13N\",\"chartContainer\":\"dashboard_chartContainer__27p65\",\"font\":\"dashboard_font__elDPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\",\"scrollable\":\"navBar_scrollable__tz26l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"dropdown_select__2Z59b\",\"optionCommonStyle\":\"dropdown_optionCommonStyle__3fumI\",\"placeholder\":\"dropdown_placeholder__jle5-\",\"option\":\"dropdown_option__3SZgp\",\"placeholderLabel\":\"dropdown_placeholderLabel__3TXeS\",\"options\":\"dropdown_options__lYzgy\",\"controlIcons\":\"dropdown_controlIcons__z1VsC\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './widget.module.scss';\n\nconst Widget = ({\n                  children,\n                  className,\n                }) => (\n    <div className={classNames(styles.container, className)}>\n      {children}\n    </div>\n);\nWidget.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Widget;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nclass Button extends Component {\n  state = {\n    inFocus: false,\n  };\n\n  onFocus = () => {\n    this.setState({inFocus: true});\n  };\n\n  onBlur = () => {\n    return this.setState({inFocus: false});\n  };\n\n  render() {\n    const {children, className, onClick, onFocusClassName} = this.props;\n    const {inFocus} = this.state;\n\n    return (\n        <button\n            className={classNames(\n                styles.button,\n                className,\n                {\n                  [styles.btnFocus]: inFocus,\n                  [onFocusClassName]: inFocus,\n                },\n            )}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onMouseUp={this.onBlur}\n            onMouseDown={this.onFocus}\n            onClick={onClick}\n        >\n          {children}\n        </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onFocusClassName: PropTypes.string,\n};\n\nexport default Button;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nimport Button from \"../button/Button\";\nimport styles from './dropdown.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const mayBeSelectedOptionIndex = props.options.findIndex(o => o.value === props.selectedValue);\n    const selectedOptionIndex = mayBeSelectedOptionIndex === -1 ? 0 : mayBeSelectedOptionIndex;\n\n    this.state = {\n      isOpen: false,\n      selectedOptionIndex,\n    };\n  }\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen}, () => {\n      if (this.state.isOpen) {\n        document.addEventListener('click', this.handleOutsideClick);\n        document.addEventListener('keydown', this.handleEsc);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('keydown', this.handleEsc);\n      }\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    this.toggleOpen(e);\n  };\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.toggleOpen(e)\n    }\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    this.setState({selectedOptionIndex: index}, this.toggleOpen);\n    onClick && onClick(e, options[index]);\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div className={classNames(styles.select, className)}>\n          <Button\n              className={styles.placeholder}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            {isOpen ? openIcon : closedIcon}\n          </Button>\n          <If condition={isOpen}>\n            <div className={classNames(styles.options)}>\n              {options.map((option, index) =>\n                  <Button\n                      key={option.value}\n                      className={styles.option}\n                      onClick={(e) => this.selectOption(e, index)}\n                  >\n                    {option.label}\n                  </Button>\n              )}\n            </div>\n          </If>\n        </div>\n    )\n  }\n}\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n  selectedValue: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport {Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\nimport classNames from 'classnames';\nimport Widget from \"../../components/widget/Widget\";\nimport styles from './dashboard.module.scss';\nimport Dropdown from \"../../components/dropdown/Dropdown\";\n\nconst months = [\n  {value: 'jan', label: 'January'},\n  {value: 'feb', label: 'February'},\n  {value: 'mar', label: 'March'},\n  {value: 'apr', label: 'April'},\n  {value: 'may', label: 'May'},\n  {value: 'jun', label: 'June'},\n  {value: 'jul', label: 'July'},\n  {value: 'aug', label: 'August'},\n  {value: 'sep', label: 'September'},\n  {value: 'oct', label: 'October'},\n  {value: 'nov', label: 'November'},\n  {value: 'dec', label: 'December'},\n];\n\nconst years = [\n  {value: '15', label: '2015'},\n  {value: '16', label: '2016'},\n  {value: '18', label: '2018'},\n  {value: '19', label: '2019'},\n];\n\nconst data = [...Array(31)].map((e, index) => ({\n  x: index + 1,\n  y: Math.round(Math.random() * (8500 - 1500) + 1500),\n}));\n\n\nconst tickFormatter = (value) => `${value / 1000}k`;\n\nconst Dashboard = () => {\n  return (\n      <div>\n        <Widget className={styles.headerWidget}>\n          <div className={styles.header}>\n            <strong>Daily Visitors</strong>\n            <div className={styles.filterOptions}>\n              <Dropdown\n                  options={months}\n                  selectedValue={months[11].value}\n                  className={classNames(styles.filter, styles.months)}\n              />\n              <Dropdown\n                  options={years}\n                  selectedValue={years[2].value}\n                  className={classNames(styles.filter)}\n              />\n            </div>\n          </div>\n          <div className={styles.chartContainer}>\n            <ResponsiveContainer width=\"100%\" height={200} className=\"dailyVisitorsChartContainer\">\n              <BarChart data={data} barSize={12}>\n                <CartesianGrid\n                    stroke=\"#e2e5ee\"\n                    vertical={false}\n                    className=\"ola\"\n                />\n                <XAxis\n                    dataKey=\"x\"\n                    axisLine={false}\n                    tickLine={false}\n                    tick={{fill: '#93949a', fontSize: 10}}\n                    tickMargin={5}\n                />\n                <YAxis\n                    ticks={[3000, 6000, 9000]}\n                    tickFormatter={tickFormatter}\n                    orientation=\"right\"\n                    axisLine={false}\n                    tickLine={false}\n                    width={20}\n                    className={styles.font}\n                    tick={{fill: '#93949a', fontSize: 10}}\n                />\n                <Tooltip cursor={false}/>\n                <Bar dataKey=\"y\" fill=\"#1D68D5\"/>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </Widget>\n      </div>\n  )\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nimport Button from \"../button/Button\";\nimport styles from './profile.module.scss';\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <Button className={styles.settings} onFocusClassName={styles.settingsOnFocus}>\n          <FontAwesomeIcon icon={faCog}/>\n        </Button>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\nimport Button from \"../button/Button\";\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n    isContentVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: !!this.props.header.isOpen,\n      isContentVisible: !!this.props.header.isOpen,\n    });\n  }\n\n  toggleOpen = () => {\n    if (!this.props.options) {\n      return;\n    }\n\n    const {isOpen} = this.state;\n\n    this.setState({isOpen: !isOpen, isContentVisible: true});\n  };\n\n  toggleContentVisibility = () => {\n    const {isOpen} = this.state;\n    this.setState({isContentVisible: isOpen});\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen, isContentVisible} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <Button\n              className={classNames(styles.option, styles.header, {\n                [styles.isOpen]: isOpen,\n              })}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </Button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {\n              [styles.isOpen]: isOpen,\n              [styles.isContentVisible]: isContentVisible,\n            })}\n                 onTransitionEnd={this.toggleContentVisibility}\n            >\n              {\n                options.map(option => (\n                    <Button key={option.label} className={styles.option}>{option.label}</Button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './recentlyViewed.module.scss';\nimport {faLongArrowAltRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Button from \"../button/Button\";\n\nconst RecentlyViewed = ({\n    className\n}) => (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.header}>Recently Viewed</div>\n      <Button className={styles.option}>Overall Performance <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Invoice #930 <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Customer: Minerva Viewer <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n    </div>\n);\nRecentlyViewed.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RecentlyViewed;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCalendar, faColumns, faHome, faInbox, faReceipt, faVial,} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\nimport RecentlyViewed from \"../recentlyViewed/RecentlyViewed\";\n\nimport Button from \"../button/Button\";\nimport styles from './navBar.module.scss'\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <Button className={classNames(styles.home, styles.option)}>\n          <FontAwesomeIcon icon={faHome}/>\n        </Button>\n        <div className={classNames(styles.option)}><Profile/></div>\n        <div className={styles.scrollable}>\n          {\n            navBarOptions.map(option => (\n                <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                  <Accordion {...option}/>\n                </div>\n            ))\n          }\n          <div className={classNames(styles.option, styles.secondaryOption)}><RecentlyViewed/></div>\n        </div>\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Dropdown from \"../dropdown/Dropdown\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Dropdown\n            options={languageOptions}\n            className={styles.languageSelect}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"recentlyViewed_container__2mghy\",\"header\":\"recentlyViewed_header__2-OZm\",\"option\":\"recentlyViewed_option__2F_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\",\"languageSelect\":\"header_languageSelect__38emb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"btnFocus\":\"button_btnFocus__h_Wtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};"],"sourceRoot":""}