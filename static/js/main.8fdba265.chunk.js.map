{"version":3,"sources":["components/header/header.module.scss","app.module.scss","components/userStatus/userStatus.module.scss","serviceWorker.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/accordion/Accordion.js","components/navbar/NavBar.js","components/select/Select.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js","components/profile/profile.module.scss","components/accordion/accordion.module.scss","components/navbar/navBar.module.scss","components/select/select.module.scss"],"names":["module","exports","flagIcon","languageSelect","appContainer","mainContent","status","online","Boolean","window","location","hostname","match","Dashboard","react_default","a","createElement","UserStatus","_ref","className","classNames","styles","Profile","profile","image","profileElements","settings","react_fontawesome_index_es","icon","faCog","name","userStatus_UserStatus","description","closedIcon","controlIcons","faCaretUp","faCaretDown","openIcon","Accordion","state","isOpen","toggleOpen","_this","setState","this","props","header","_this$props","options","container","onClick","headerIcon","headerLabel","label","Object","defineProperty","map","option","key","Component","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","home","faHome","profile_Profile","secondaryOption","accordion_Accordion","Select","selectedOptionIndex","selectOption","e","index","_this2","_this$props2","placeHolder","_this$state","effectivePlaceholder","select","placeholder","placeholderLabel","faAngleDown","faAngleUp","value","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","select_Select","App","navbar_NavBar","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","optionCommonStyle"],"mappings":"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","file":"static/js/main.8fdba265.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\",\"languageSelect\":\"header_languageSelect__38emb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Dashboard = () => {\n  return (\n      <div>Main content</div>\n  )\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './profile.module.scss';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <div className={styles.settings}>\n          <FontAwesomeIcon icon={faCog}/>\n        </div>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  componentDidMount() {\n    this.setState({isOpen: !!this.props.header.isOpen});\n  }\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen});\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <button\n              className={styles.header}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {[styles.isOpen]: isOpen})}>\n              {\n                options.map(option => (\n                    <button key={option.label} className={styles.option}>{option.label}</button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  faCalendar,\n  faColumns,\n  faHome,\n  faInbox,\n  faReceipt,\n  faVial,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport styles from './navBar.module.scss'\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <div className={classNames(styles.home, styles.option)}><FontAwesomeIcon icon={faHome}/></div>\n        <div className={classNames(styles.option)}><Profile/></div>\n        {\n          navBarOptions.map(option => (\n              <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                <Accordion {...option}/>\n              </div>\n          ))\n        }\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleDown, faAngleUp} from '@fortawesome/free-solid-svg-icons'\n\nimport styles from './select.module.scss';\n\nclass Select extends Component {\n  state = {\n    isOpen: false,\n    selectedOptionIndex: 0,\n  };\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen});\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    this.setState({selectedOptionIndex: index}, this.toggleOpen);\n    onClick && onClick(e, options[index]);\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div className={classNames(styles.select, className)}>\n          <button\n              className={styles.placeholder}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            <FontAwesomeIcon icon={isOpen ? faAngleDown : faAngleUp}/>\n          </button>\n          <If condition={isOpen}>\n            <div className={classNames(styles.options)}>\n              {options.map((option, index) =>\n                  <button\n                      key={option.value}\n                      className={styles.option}\n                      onClick={(e) => this.selectOption(e, index)}\n                  >\n                    {option.label}\n                  </button>\n              )}\n            </div>\n          </If>\n        </div>\n    )\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n};\n\nexport default Select;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Select from \"../select/Select\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Select\n            options={languageOptions}\n            className={styles.languageSelect}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"header\":\"accordion_header__KSBK2\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"option\":\"accordion_option__2uaXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__XlnEk\",\"optionCommonStyle\":\"select_optionCommonStyle__28eB4\",\"placeholder\":\"select_placeholder__1klAY\",\"option\":\"select_option__27sUl\",\"placeholderLabel\":\"select_placeholderLabel__1yHPH\",\"options\":\"select_options__9ZN8d\"};"],"sourceRoot":""}