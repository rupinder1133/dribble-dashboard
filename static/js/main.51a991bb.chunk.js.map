{"version":3,"sources":["components/accordion/accordion.module.scss","components/dropdown/dropdown.module.scss","components/profile/profile.module.scss","components/widget/widget.module.scss","components/navbar/navBar.module.scss","pages/dashboard/dashboard.module.scss","serviceWorker.js","components/widget/Widget.js","components/button/Button.js","components/dropdown/Dropdown.js","components/dailyVisitorsChart/DailyVisitorsChart.js","components/loader/Loader.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/accordion/Accordion.js","components/recentlyViewed/RecentlyViewed.js","components/navbar/NavBar.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js","components/dailyVisitorsChart/dailyVisitorsChart.module.scss","components/recentlyViewed/recentlyViewed.module.scss","components/button/button.module.scss","components/loader/loader.module.scss","app.module.scss","components/userStatus/userStatus.module.scss","components/header/header.module.scss"],"names":["module","exports","container","controlIcons","headerIcon","headerLabel","options","isOpen","isContentVisible","option","header","select","optionCommonStyle","placeholder","placeholderLabel","fullWidth","profileElements","profile","image","name","status","description","settings","settingsOnFocus","home","secondaryOption","scrollable","filterOptions","filter","months","chartContainer","Boolean","window","location","hostname","match","Widget","_ref","children","className","react_default","a","createElement","classNames","styles","Button","state","inFocus","onFocus","_this","setState","onBlur","_classNames","_this$props","this","props","onClick","onFocusClassName","button","Object","defineProperty","btnFocus","onMouseUp","onMouseDown","Component","closedIcon","index_es","icon","faCaretUp","faCaretDown","openIcon","Dropdown","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","document","addEventListener","handleOutsideClick","handleEsc","removeEventListener","e","key","selectOption","index","selectedOptionIndex","value","mayBeSelectedOptionIndex","findIndex","o","selectedValue","expandOptionsToFullWidth","maxOptions","optionHeight","optionsRef","clientHeight","maxOptionWidth","Array","from","map","clientWidth","reduce","max","style","maxHeight","concat","containerRef","minWidth","_this2","_this$props2","placeHolder","_this$state","effectivePlaceholder","label","ref","button_Button","defaultProps","tickFormatter","RenderTooltip","active","payload","month","year","tooltipContainer","date","visitsContainer","legend","RenderCursor","es6","x","width","y","height","fill","DailyVisitorsChart","_ref2","data","ticks","domain","barSize","stroke","vertical","dataKey","axisLine","tickLine","tick","fontSize","tickMargin","orientation","tickSize","dy","content","DailyVisitorsChart_RenderTooltip","cursor","DailyVisitorsChart_RenderCursor","Loader","isLoading","ldsRing","years","Dashboard","selectedMonth","selectedYear","isDailyVisitChartLoading","dailyVisitData","genDailyVisitData","toConsumableArray","Math","round","random","markLoaded","updateFilters","updatedState","timeout","setTimeout","widget_Widget","headerWidget","dropdown_Dropdown","loader_Loader","dailyVisitorsChart_DailyVisitorsChart","UserStatus","online","Profile","faCog","userStatus_UserStatus","Accordion","toggleContentVisibility","_classNames2","onTransitionEnd","RecentlyViewed","faLongArrowAltRight","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","faHome","profile_Profile","accordion_Accordion","recentlyViewed_RecentlyViewed","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","flagIcon","App","appContainer","navbar_NavBar","mainContent","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","lds-ring"],"mappings":"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","file":"static/js/main.51a991bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"isContentVisible\":\"accordion_isContentVisible__3mmRQ\",\"option\":\"accordion_option__2uaXo\",\"header\":\"accordion_header__KSBK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"dropdown_select__2Z59b\",\"optionCommonStyle\":\"dropdown_optionCommonStyle__3fumI\",\"placeholder\":\"dropdown_placeholder__jle5-\",\"option\":\"dropdown_option__3SZgp\",\"placeholderLabel\":\"dropdown_placeholderLabel__3TXeS\",\"options\":\"dropdown_options__lYzgy\",\"isOpen\":\"dropdown_isOpen__2vVkH\",\"controlIcons\":\"dropdown_controlIcons__z1VsC\",\"fullWidth\":\"dropdown_fullWidth__OGBS5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\",\"settingsOnFocus\":\"profile_settingsOnFocus__3M4G_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"widget_container__1ThYx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\",\"scrollable\":\"navBar_scrollable__tz26l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"dashboard_header__2gN8S\",\"filterOptions\":\"dashboard_filterOptions__uxzD5\",\"filter\":\"dashboard_filter__18gax\",\"months\":\"dashboard_months__3y13N\",\"chartContainer\":\"dashboard_chartContainer__27p65\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './widget.module.scss';\n\nconst Widget = ({\n                  children,\n                  className,\n                }) => (\n    <div className={classNames(styles.container, className)}>\n      {children}\n    </div>\n);\nWidget.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Widget;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nclass Button extends Component {\n  state = {\n    inFocus: false,\n  };\n\n  onFocus = () => {\n    this.setState({inFocus: true});\n  };\n\n  onBlur = () => {\n    return this.setState({inFocus: false});\n  };\n\n  render() {\n    const {children, className, onClick, onFocusClassName} = this.props;\n    const {inFocus} = this.state;\n\n    return (\n        <button\n            className={classNames(\n                styles.button,\n                className,\n                {\n                  [styles.btnFocus]: inFocus,\n                  [onFocusClassName]: inFocus,\n                },\n            )}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onMouseUp={this.onBlur}\n            onMouseDown={this.onFocus}\n            onClick={onClick}\n        >\n          {children}\n        </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onFocusClassName: PropTypes.string,\n};\n\nexport default Button;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nimport Button from \"../button/Button\";\nimport styles from './dropdown.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const mayBeSelectedOptionIndex = props.options.findIndex(o => o.value === props.selectedValue);\n    const selectedOptionIndex = mayBeSelectedOptionIndex === -1 ? 0 : mayBeSelectedOptionIndex;\n\n    this.state = {\n      isOpen: true,\n      selectedOptionIndex,\n      expandOptionsToFullWidth: false,\n    };\n  }\n\n  componentDidMount() {\n    const {maxOptions} = this.props;\n\n    const optionHeight = this.optionsRef.children[0].clientHeight;\n    const maxOptionWidth = Array.from(this.optionsRef.children)\n        .map(o => o.clientWidth)\n\n        .reduce((max, value) => max > value ? max : value, 0);\n\n    this.optionsRef.style.maxHeight = `${(maxOptions * optionHeight) + optionHeight / 2}px`;\n    this.containerRef.style.minWidth = `${maxOptionWidth + 30}px`;\n    this.setState({isOpen: false, expandOptionsToFullWidth: true});\n  }\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen}, () => {\n      if (this.state.isOpen) {\n        document.addEventListener('click', this.handleOutsideClick);\n        document.addEventListener('keydown', this.handleEsc);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('keydown', this.handleEsc);\n      }\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    this.toggleOpen(e);\n  };\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.toggleOpen(e)\n    }\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    if (this.state.selectedOptionIndex !== index) {\n      this.setState({selectedOptionIndex: index}, this.toggleOpen);\n      onClick && onClick(options[index].value, index);\n    }\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n      expandOptionsToFullWidth,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div\n            className={classNames(styles.select, className)}\n            ref={ref => {\n              this.containerRef = ref;\n            }}\n        >\n          <Button\n              className={classNames(styles.placeholder, {[styles.fullWidth]: expandOptionsToFullWidth})}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            {isOpen ? openIcon : closedIcon}\n          </Button>\n          <div\n              className={classNames(styles.options, {[styles.isOpen]: isOpen})}\n              ref={ref => {\n                this.optionsRef = ref;\n              }}\n          >\n            {options.map((option, index) =>\n                <Button\n                    key={option.value}\n                    className={classNames(styles.option, {[styles.fullWidth]: expandOptionsToFullWidth})}\n                    onClick={(e) => this.selectOption(e, index)}\n                >\n                  {option.label}\n                </Button>\n            )}\n          </div>\n        </div>\n    )\n  }\n}\n\nDropdown.defaultProps = {\n  maxOptions: 5,\n};\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n  selectedValue: PropTypes.string,\n  className: PropTypes.string,\n  maxOptions: PropTypes.number.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport {Bar, BarChart, CartesianGrid, Rectangle, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\nimport PropTypes from 'prop-types';\nimport styles from './dailyVisitorsChart.module.scss';\n\nconst gridColor = \"#e2e5ee\";\nconst barColor = \"#1d68d5\";\nconst tickColor = '#93949a';\n\nconst tickFormatter = (value) => value ? `${value / 1000}K` : '';\n\nconst RenderTooltip = ({active, payload, label, month, year}) => (\n    <If condition={active}>\n      <div className={styles.tooltipContainer}>\n        <div className={styles.date}>{label} {month} {year}</div>\n        <div className={styles.visitsContainer}>\n          <div className={styles.legend}/>\n          <div className={styles.label}>Visitors</div>\n          <div><strong>{payload[0].value}</strong></div>\n        </div>\n      </div>\n    </If>\n);\n\nconst RenderCursor = (props) => (\n    <Rectangle\n        x={props.x + (props.width / 2) - 2}\n        y={props.y}\n        width={2}\n        height={props.height}\n        fill={gridColor}\n    />\n);\n\nconst DailyVisitorsChart = ({data, month, year, height, ticks, domain, barSize}) =>\n    <ResponsiveContainer width=\"100%\" height={height} className=\"dailyVisitorsChart\">\n      <BarChart data={data} barSize={barSize}>\n        <CartesianGrid\n            stroke={gridColor}\n            vertical={false}\n        />\n        <XAxis\n            dataKey=\"x\"\n            axisLine={false}\n            tickLine={false}\n            tick={{fill: tickColor, fontSize: 10}}\n            tickMargin={5}\n        />\n        <YAxis\n            ticks={ticks}\n            tickFormatter={tickFormatter}\n            orientation=\"right\"\n            axisLine={false}\n            tickLine={{stroke: gridColor}}\n            tickSize={18}\n            width={25}\n            tick={{fill: tickColor, fontSize: 10, dy: 15}}\n            tickMargin={-16}\n            domain={domain}\n        />\n        <Tooltip content={<RenderTooltip month={month} year={year}/>} cursor={<RenderCursor/>}/>\n        <Bar dataKey=\"y\" fill={barColor}/>\n      </BarChart>\n    </ResponsiveContainer>;\n\n\nDailyVisitorsChart.defaultProps = {\n  barSize: 12,\n};\nDailyVisitorsChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  })),\n  month: PropTypes.string.isRequired,\n  year: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  barSize: PropTypes.number.isRequired,\n  ticks: PropTypes.arrayOf(PropTypes.number),\n  domain: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default DailyVisitorsChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './loader.module.scss'\n\nconst Loader = ({children, isLoading}) => (\n    <Choose>\n      <When condition={isLoading}>\n        <div className={styles.container}>\n          <div className={styles.ldsRing}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n          </div>\n        </div>\n      </When>\n      <Otherwise>\n        {children}\n      </Otherwise>\n    </Choose>\n);\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport Widget from \"../../components/widget/Widget\";\nimport styles from './dashboard.module.scss';\nimport Dropdown from \"../../components/dropdown/Dropdown\";\nimport DailyVisitorsChart from \"../../components/dailyVisitorsChart/DailyVisitorsChart\";\nimport Loader from \"../../components/loader/Loader\";\n\nconst months = [\n  {value: 'jan', label: 'January'},\n  {value: 'feb', label: 'February'},\n  {value: 'mar', label: 'March'},\n  {value: 'apr', label: 'April'},\n  {value: 'may', label: 'May'},\n  {value: 'jun', label: 'June'},\n  {value: 'jul', label: 'July'},\n  {value: 'aug', label: 'August'},\n  {value: 'sep', label: 'September'},\n  {value: 'oct', label: 'October'},\n  {value: 'nov', label: 'November'},\n  {value: 'dec', label: 'December'},\n];\n\nconst years = [\n  {value: '15', label: '2015'},\n  {value: '16', label: '2016'},\n  {value: '18', label: '2018'},\n  {value: '19', label: '2019'},\n];\n\nclass Dashboard extends Component {\n  state = {\n    selectedMonth: 11,\n    selectedYear: 2,\n    isDailyVisitChartLoading: true,\n    dailyVisitData: [],\n  };\n\n  componentDidMount() {\n    this.genDailyVisitData();\n  }\n\n  genDailyVisitData = () => {\n    this.setState({\n      dailyVisitData: [...Array(31)].map((e, index) => ({\n        x: index + 1,\n        y: Math.round(Math.random() * (8500 - 1500) + 1500),\n      }))\n    }, this.markLoaded)\n  };\n\n  updateFilters = (updatedState) => {\n    this.setState(updatedState, this.genDailyVisitData)\n  };\n\n  markLoaded = () => {\n    const timeout = Math.round(Math.random() * 2000);\n    setTimeout(() => this.setState({\n      isDailyVisitChartLoading: false,\n    }), timeout)\n  };\n\n  render() {\n    const {selectedMonth, selectedYear, isDailyVisitChartLoading, dailyVisitData} = this.state;\n\n    return (\n        <div>\n          <Widget className={styles.headerWidget}>\n            <div className={styles.header}>\n              <strong>Daily Visitors</strong>\n              <div className={styles.filterOptions}>\n                <Dropdown\n                    options={months}\n                    selectedValue={months[selectedMonth].value}\n                    className={classNames(styles.filter, styles.months)}\n                    onClick={(value, index) => this.updateFilters({selectedMonth: index, isDailyVisitChartLoading: true})}\n                />\n                <Dropdown\n                    options={years}\n                    selectedValue={years[2].value}\n                    className={classNames(styles.filter)}\n                    onClick={(value, index) => this.updateFilters({selectedYear: index, isDailyVisitChartLoading: true})}\n                />\n              </div>\n            </div>\n            <div className={styles.chartContainer}>\n              <Loader isLoading={isDailyVisitChartLoading}>\n                <DailyVisitorsChart\n                    data={dailyVisitData}\n                    month={months[selectedMonth].label}\n                    year={years[selectedYear].label}\n                    height={200}\n                    ticks={[0, 3000, 6000, 9000]}\n                    domain={[0, 9000]}\n                />\n              </Loader>\n            </div>\n          </Widget>\n        </div>\n    )\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nimport Button from \"../button/Button\";\nimport styles from './profile.module.scss';\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <Button className={styles.settings} onFocusClassName={styles.settingsOnFocus}>\n          <FontAwesomeIcon icon={faCog}/>\n        </Button>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\nimport Button from \"../button/Button\";\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n    isContentVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: !!this.props.header.isOpen,\n      isContentVisible: !!this.props.header.isOpen,\n    });\n  }\n\n  toggleOpen = () => {\n    if (!this.props.options) {\n      return;\n    }\n\n    const {isOpen} = this.state;\n\n    this.setState({isOpen: !isOpen, isContentVisible: true});\n  };\n\n  toggleContentVisibility = () => {\n    const {isOpen} = this.state;\n    this.setState({isContentVisible: isOpen});\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen, isContentVisible} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <Button\n              className={classNames(styles.option, styles.header, {\n                [styles.isOpen]: isOpen,\n              })}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </Button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {\n              [styles.isOpen]: isOpen,\n              [styles.isContentVisible]: isContentVisible,\n            })}\n                 onTransitionEnd={this.toggleContentVisibility}\n            >\n              {\n                options.map(option => (\n                    <Button key={option.label} className={styles.option}>{option.label}</Button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './recentlyViewed.module.scss';\nimport {faLongArrowAltRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Button from \"../button/Button\";\n\nconst RecentlyViewed = ({\n    className\n}) => (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.header}>Recently Viewed</div>\n      <Button className={styles.option}>Overall Performance <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Invoice #930 <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n      <Button className={styles.option}>Customer: Minerva Viewer <FontAwesomeIcon icon={faLongArrowAltRight}/></Button>\n    </div>\n);\nRecentlyViewed.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RecentlyViewed;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCalendar, faColumns, faHome, faInbox, faReceipt, faVial,} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\nimport RecentlyViewed from \"../recentlyViewed/RecentlyViewed\";\n\nimport Button from \"../button/Button\";\nimport styles from './navBar.module.scss'\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <Button className={classNames(styles.home, styles.option)}>\n          <FontAwesomeIcon icon={faHome}/>\n        </Button>\n        <div className={classNames(styles.option)}><Profile/></div>\n        <div className={styles.scrollable}>\n          {\n            navBarOptions.map(option => (\n                <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                  <Accordion {...option}/>\n                </div>\n            ))\n          }\n          <div className={classNames(styles.option, styles.secondaryOption)}><RecentlyViewed/></div>\n        </div>\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Dropdown from \"../dropdown/Dropdown\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Dropdown\n            options={languageOptions}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltipContainer\":\"dailyVisitorsChart_tooltipContainer__7PaSn\",\"date\":\"dailyVisitorsChart_date__3_6Y4\",\"visitsContainer\":\"dailyVisitorsChart_visitsContainer__2w38Y\",\"legend\":\"dailyVisitorsChart_legend__2mcAp\",\"label\":\"dailyVisitorsChart_label__2Q0GX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"recentlyViewed_container__2mghy\",\"header\":\"recentlyViewed_header__2-OZm\",\"option\":\"recentlyViewed_option__2F_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"btnFocus\":\"button_btnFocus__h_Wtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__2zY8R\",\"ldsRing\":\"loader_ldsRing__3hE5J\",\"lds-ring\":\"loader_lds-ring__3FXaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\"};"],"sourceRoot":""}