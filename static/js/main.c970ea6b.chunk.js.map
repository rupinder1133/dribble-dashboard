{"version":3,"sources":["components/accordion/accordion.module.scss","components/profile/profile.module.scss","components/navbar/navBar.module.scss","components/dropdown/dropdown.module.scss","components/recentlyViewed/recentlyViewed.module.scss","components/header/header.module.scss","app.module.scss","components/userStatus/userStatus.module.scss","components/button/button.module.scss","serviceWorker.js","pages/dashboard/Dashboard.js","components/userStatus/UserStatus.js","components/profile/Profile.js","components/button/Button.js","components/accordion/Accordion.js","components/recentlyViewed/RecentlyViewed.js","components/navbar/NavBar.js","components/dropdown/Dropdown.js","components/flagIcon/FlagIcon.js","components/header/Header.js","App.js","index.js"],"names":["module","exports","container","controlIcons","headerIcon","headerLabel","options","isOpen","isContentVisible","option","header","profileElements","profile","image","name","status","description","settings","home","secondaryOption","scrollable","select","optionCommonStyle","placeholder","placeholderLabel","flagIcon","languageSelect","appContainer","mainContent","online","button","btnFocus","Boolean","window","location","hostname","match","Dashboard","react_default","a","createElement","UserStatus","_ref","className","classNames","styles","Profile","react_fontawesome_index_es","icon","faCog","userStatus_UserStatus","Button","state","inFocus","onFocus","_this","setState","onBlur","_this$props","this","props","children","onClick","Object","defineProperty","onMouseUp","onMouseDown","Component","closedIcon","faCaretUp","faCaretDown","openIcon","Accordion","toggleOpen","setTimeout","_classNames2","_this$state","button_Button","label","map","key","RecentlyViewed","faLongArrowAltRight","navBarOptions","faColumns","faCalendar","faInbox","faReceipt","faVial","NavBar","faHome","profile_Profile","accordion_Accordion","recentlyViewed_RecentlyViewed","Dropdown","selectedOptionIndex","document","addEventListener","handleOutsideClick","handleEsc","removeEventListener","e","selectOption","index","_this2","_this$props2","placeHolder","effectivePlaceholder","value","FlagIcon","FlagIconFactory","React","useCssModules","Header","languageOptions","flagIcon_FlagIcon","code","dropdown_Dropdown","App","navbar_NavBar","header_Header","dashboard_Dashboard","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c970ea6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"accordion_container__19DnE\",\"controlIcons\":\"accordion_controlIcons__1Ptpq\",\"headerIcon\":\"accordion_headerIcon__FfeLI\",\"headerLabel\":\"accordion_headerLabel__Vhrw1\",\"options\":\"accordion_options__q8wqs\",\"isOpen\":\"accordion_isOpen__2HaNG\",\"isContentVisible\":\"accordion_isContentVisible__3mmRQ\",\"option\":\"accordion_option__2uaXo\",\"header\":\"accordion_header__KSBK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileElements\":\"profile_profileElements__2Iwf-\",\"profile\":\"profile_profile__2wqo1\",\"image\":\"profile_image__2oobx\",\"name\":\"profile_name__Mafex\",\"status\":\"profile_status__2BwUL\",\"description\":\"profile_description__1Du-2\",\"settings\":\"profile_settings__2MHIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"navBar_home__2PyWl\",\"option\":\"navBar_option__3ccJB\",\"secondaryOption\":\"navBar_secondaryOption__3Leh6\",\"scrollable\":\"navBar_scrollable__tz26l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"dropdown_select__2Z59b\",\"optionCommonStyle\":\"dropdown_optionCommonStyle__3fumI\",\"placeholder\":\"dropdown_placeholder__jle5-\",\"option\":\"dropdown_option__3SZgp\",\"placeholderLabel\":\"dropdown_placeholderLabel__3TXeS\",\"options\":\"dropdown_options__lYzgy\",\"controlIcons\":\"dropdown_controlIcons__z1VsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"recentlyViewed_container__2mghy\",\"header\":\"recentlyViewed_header__2-OZm\",\"option\":\"recentlyViewed_option__2F_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagIcon\":\"header_flagIcon__2yJtt\",\"languageSelect\":\"header_languageSelect__38emb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"app_appContainer__30PKY\",\"mainContent\":\"app_mainContent__3hWpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"userStatus_status__3A_NX\",\"online\":\"userStatus_online__2KNId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__H5057\",\"btnFocus\":\"button_btnFocus__h_Wtv\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Dashboard = () => {\n  return (\n      <div>Main content</div>\n  )\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './userStatus.module.scss';\n\nconst UserStatus = ({ className }) => (\n    <div className={classNames(styles.status, styles.online, className)}/>\n);\n\nexport default UserStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './profile.module.scss';\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserStatus from \"../userStatus/UserStatus\";\n\nconst Profile = () => (\n    <div className={styles.profile}>\n      <div className={classNames(styles.image, styles.profileElements)}>\n        <button className={styles.settings}>\n          <FontAwesomeIcon icon={faCog}/>\n        </button>\n      </div>\n      <div className={classNames(styles.name, styles.profileElements)}>\n        <strong>Martha Blair</strong>\n        <UserStatus className={styles.status}/>\n      </div>\n      <div className={classNames(styles.description, styles.profileElements)}>Developer</div>\n    </div>\n);\n\nexport default Profile;\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './button.module.scss';\n\nclass Button extends Component {\n  state = {\n    inFocus: false,\n  };\n\n  onFocus = () => {\n    this.setState({inFocus: true});\n  };\n\n  onBlur = () => {\n    return this.setState({inFocus: false});\n  };\n\n  render() {\n    const {children, className, onClick} = this.props;\n    const {inFocus} = this.state;\n\n    return (\n        <button\n            className={classNames(\n                styles.button,\n                {\n                  [styles.btnFocus]: inFocus\n                },\n                className\n            )}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            onMouseUp={this.onBlur}\n            onMouseDown={this.onFocus}\n            onClick={onClick}\n        >\n          {children}\n        </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Button;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCaretDown, faCaretUp} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from './accordion.module.scss';\nimport Button from \"../button/Button\";\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Accordion extends Component {\n  state = {\n    isOpen: false,\n    isContentVisible: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isOpen: !!this.props.header.isOpen,\n      isContentVisible: !!this.props.header.isOpen,\n    });\n  }\n\n  toggleOpen = () => {\n    if(!this.props.options) {\n      return;\n    }\n\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen});\n    if(isOpen){\n      setTimeout(() => this.setState({ isContentVisible: !isOpen }), 300);\n    } else {\n      this.setState({ isContentVisible: !isOpen });\n    }\n  };\n\n  render() {\n    const {header, options} = this.props;\n    const {isOpen, isContentVisible} = this.state;\n\n    return (\n        <div className={styles.container}>\n          <Button\n              className={classNames(styles.option, styles.header, {\n                [styles.isOpen]: isOpen,\n              })}\n              onClick={this.toggleOpen}\n          >\n            <FontAwesomeIcon\n                icon={header.icon}\n                className={styles.headerIcon}\n            />\n            <div className={styles.headerLabel}>{header.label}</div>\n            <If condition={options}>\n              {isOpen ? openIcon : closedIcon}\n            </If>\n          </Button>\n          <If condition={options}>\n            <div className={classNames(styles.options, {\n              [styles.isOpen]: isOpen,\n              [styles.isContentVisible]: isContentVisible,\n            })}>\n              {\n                options.map(option => (\n                    <Button key={option.label} className={styles.option}>{option.label}</Button>\n                ))\n              }\n            </div>\n          </If>\n        </div>\n    );\n  }\n}\n\nAccordion.propTypes = {\n  header: PropTypes.shape({\n    icon: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }).isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Accordion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './recentlyViewed.module.scss';\nimport {faLongArrowAltRight} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nconst RecentlyViewed = ({\n    className\n}) => (\n    <div className={classNames(styles.container, className)}>\n      <div className={styles.header}>Recently Viewed</div>\n      <button className={styles.option}>Overall Performance <FontAwesomeIcon icon={faLongArrowAltRight}/></button>\n      <button className={styles.option}>Invoice #930 <FontAwesomeIcon icon={faLongArrowAltRight}/></button>\n      <button className={styles.option}>Customer: Minerva Viewer <FontAwesomeIcon icon={faLongArrowAltRight}/></button>\n    </div>\n);\nRecentlyViewed.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default RecentlyViewed;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {faCalendar, faColumns, faHome, faInbox, faReceipt, faVial,} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport styles from './navBar.module.scss'\nimport Profile from \"../profile/Profile\";\nimport Accordion from \"../accordion/Accordion\";\nimport RecentlyViewed from \"../recentlyViewed/RecentlyViewed\";\n\nconst navBarOptions = [\n  {\n    header: {\n      icon: faColumns,\n      label: 'Dashboard',\n      isOpen: true,\n    },\n    options: [\n      {label: 'Page Visitors'},\n      {label: 'Post Performance'},\n      {label: 'Team Overall'},\n    ]\n  },\n  {\n    header: {\n      icon: faCalendar,\n      label: 'Calender',\n    },\n  },\n  {\n    header: {\n      icon: faInbox,\n      label: 'Inbox',\n    },\n    options: [\n      {label: 'Starred'},\n      {label: 'Others'},\n    ]\n\n  },\n  {\n    header: {\n      icon: faReceipt,\n      label: 'Invoicing',\n    },\n  },\n  {\n    header: {\n      icon: faVial,\n      label: 'Lab / Experimental',\n    },\n  },\n];\n\nconst NavBar = () => {\n  return (\n      <nav>\n        <button className={classNames(styles.home, styles.option)}>\n          <FontAwesomeIcon icon={faHome}/>\n        </button>\n        <div className={classNames(styles.option)}><Profile/></div>\n        <div className={styles.scrollable}>\n          {\n            navBarOptions.map(option => (\n                <div className={classNames(styles.option, styles.secondaryOption)} key={option.header.label}>\n                  <Accordion {...option}/>\n                </div>\n            ))\n          }\n          <div className={classNames(styles.option, styles.secondaryOption)}><RecentlyViewed/></div>\n        </div>\n      </nav>\n  )\n};\n\nexport default NavBar;\n","import React, {Component} from 'react';\nimport * as PropTypes from \"prop-types\";\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\nimport styles from './dropdown.module.scss';\n\nconst closedIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretUp}/>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nconst openIcon = <div className={styles.controlIcons}>\n  <FontAwesomeIcon icon={faCaretDown}/>\n</div>;\n\nclass Dropdown extends Component {\n  state = {\n    isOpen: false,\n    selectedOptionIndex: 0,\n  };\n\n  toggleOpen = () => {\n    const {isOpen} = this.state;\n    this.setState({isOpen: !isOpen}, () => {\n      if (this.state.isOpen) {\n        document.addEventListener('click', this.handleOutsideClick);\n        document.addEventListener('keydown', this.handleEsc);\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick);\n        document.removeEventListener('keydown', this.handleEsc);\n      }\n    });\n  };\n\n  handleOutsideClick = (e) => {\n    this.toggleOpen(e);\n  };\n\n  handleEsc = (e) => {\n    if (e.key === 'Escape') {\n      this.toggleOpen(e)\n    }\n  };\n\n  selectOption = (e, index) => {\n    const {\n      options,\n      onClick,\n    } = this.props;\n\n    this.setState({selectedOptionIndex: index}, this.toggleOpen);\n    onClick && onClick(e, options[index]);\n  };\n\n  render() {\n    const {\n      options,\n      placeHolder,\n      className\n    } = this.props;\n\n    const {\n      selectedOptionIndex,\n      isOpen,\n    } = this.state;\n\n    const effectivePlaceholder = placeHolder || options[selectedOptionIndex].label;\n\n    return (\n        <div className={classNames(styles.select, className)}>\n          <button\n              className={styles.placeholder}\n              onClick={this.toggleOpen}\n          >\n            <div className={styles.placeholderLabel}>{effectivePlaceholder}</div>\n            {isOpen ? openIcon : closedIcon}\n          </button>\n          <If condition={isOpen}>\n            <div className={classNames(styles.options)}>\n              {options.map((option, index) =>\n                  <button\n                      key={option.value}\n                      className={styles.option}\n                      onClick={(e) => this.selectOption(e, index)}\n                  >\n                    {option.label}\n                  </button>\n              )}\n            </div>\n          </If>\n        </div>\n    )\n  }\n}\n\nDropdown.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.node,\n  })),\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport FlagIconFactory from 'react-flag-icon-css';\n\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\n\nexport default FlagIcon;\n","import React from 'react';\nimport styles from './header.module.scss';\nimport Dropdown from \"../dropdown/Dropdown\";\nimport FlagIcon from \"../flagIcon/FlagIcon\";\n\nconst Header = () => {\n  const languageOptions = [\n    {value: 'en', label: <span><FlagIcon code=\"gb\" className={styles.flagIcon}/>Eng</span> },\n    {value: 'fr', label: <span><FlagIcon code=\"fr\" className={styles.flagIcon}/>French</span> },\n  ];\n\n  return (\n      <header>\n        <strong>Dashboard</strong>\n        <Dropdown\n            options={languageOptions}\n            className={styles.languageSelect}\n        />\n      </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport styles from './app.module.scss';\nimport NavBar from \"./components/navbar/NavBar\";\nimport Header from \"./components/header/Header\";\n\nconst App = () => {\n  return (\n      <div className={styles.appContainer}>\n        <NavBar />\n        <div className={styles.mainContent}>\n          <Header />\n          <main>\n            <Dashboard />\n          </main>\n        </div>\n      </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}